(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[304],{842:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/nextjs-dark-mode",function(){return t(4748)}])},4152:function(e,n,t){"use strict";t.d(n,{Z:function(){return o}});var s=t(5893),a=t(9786);function o(e){var n=e.className,t=e.sandbox,o=e.title;return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("div",{className:"code-iframe-wrapper "+(n||""),children:(0,s.jsx)("iframe",{height:"300",title:o,loading:"lazy",src:"https://codesandbox.io/embed/"+t+"?fontsize=14&theme=dark",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts",children:(0,s.jsx)(a.Z,{href:"https://codesandbox.io/s/"+t,children:"See the Sandbox by R\xe9my Beumier"})})})})}},4748:function(e,n,t){"use strict";t.r(n);var s=t(5893),a=t(1151),o=t(4911),i=t(9786),r=t(4152),l=function(e){var n=e.children;return(0,s.jsx)(o.Z,{children:n})};function h(e){var n=Object.assign({p:"p",h2:"h2",pre:"pre",code:"code",strong:"strong",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"When I started listing the features I wanted for my new website, a dark mode toggle was in the top tier list as it's becoming a standard. Even though I'm not a big supporter of dark mode, I know people love it and I was willing to tackle this challenge."}),"\n",(0,s.jsx)(n.h2,{children:"The CSS part"}),"\n",(0,s.jsx)(n.p,{children:"For this feature, we want to use CSS variables. We have a range of variables that will switch according to the color mode.\nHere is a snippet example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"main {\n  --text: #000000;\n  --text2: #333333;\n  --bg2: #eeeeee;\n  --bg: #ffffff;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Here the dark mode style if the ",(0,s.jsx)(n.code,{children:".dark"})," class is applied. We will see the JavaScript later:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"main.dark {\n  --text: #ffffff;\n  --text2: #eeeeee;\n  --bg2: #333333;\n  --bg: #000000;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To finalise the styling part, we use the ",(0,s.jsx)(n.code,{children:"prefers-color-scheme"})," check to match users settings.\nIt needs to be overridden with the ",(0,s.jsx)(n.code,{children:".light"})," class.\nThis is done this way:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"@media (prefers-color-scheme: dark) {\n  main {\n    --text: #ffffff;\n    --text2: #eeeeee;\n    --bg2: #333333;\n    --bg: #000000;\n  }\n  main.light {\n    --text: #000000;\n    --text2: #333333;\n    --bg2: #eeeeee;\n    --bg: #ffffff;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{children:"The JavaScript and Next.js part"}),"\n",(0,s.jsxs)(n.p,{children:["Let's see how we can make this dark mode toggle with ",(0,s.jsx)(n.code,{children:"useEffect"})," and ",(0,s.jsx)(n.code,{children:"useState"}),".\nFirst, let's create a button that will change the class of our ",(0,s.jsx)(n.code,{children:"main"})," element."]}),"\n",(0,s.jsxs)(n.p,{children:["When we click on the button we toggle the ",(0,s.jsx)(n.code,{children:"theme"})," thanks to React hooks."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { useState } from 'react';\n\nexport default function Main(props) {\n  const [theme, setTheme] = useState('');\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  };\n\n  return (\n    <main className={theme}>\n      <button onClick={switchTheme} theme={theme}>\n        {theme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode'}\n      </button>\n    </main>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We have a functional button toggling between dark and light modes. However, it will not save anything and if we reload the page, we will face a light mode whatever we opted for. That's where we use ",(0,s.jsx)(n.code,{children:"localStorage"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to access the window object and therefore the localStorage, we must ensure the page has fully loaded. We do this with the ",(0,s.jsx)(n.code,{children:"useEffect(() => {...}, [])"}),".\nWe can then check localStorage and if there is an entry for ",(0,s.jsx)(n.code,{children:"theme"})," we apply it."]}),"\n",(0,s.jsxs)(n.p,{children:["We also update the ",(0,s.jsx)(n.code,{children:"switchTheme"})," to save our theme preference in localStorage."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { useEffect, useState } from 'react';\n\nexport default function Main(props) {\n  const [theme, setTheme] = useState('');\n\n  useEffect(() => {\n    let localTheme = window.localStorage.getItem('theme');\n    setTheme(localTheme);\n  }, []);\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    window.localStorage.setItem('theme', newTheme);\n    setTheme(newTheme);\n  };\n\n  return (\n    <main className={theme}>\n      <button onClick={switchTheme} theme={theme}>\n        {theme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode'}\n      </button>\n    </main>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"We have a functional dark mode toggle in your Next.js app by now. In case of struggle, check the steps again or click the full solution link below."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"TLDR"}),": ",(0,s.jsx)(i.Z,{href:"https://codesandbox.io/s/darkmode-0ubir",children:"Codesandbox: Dark mode toggle in Next.js"}),"."]}),"\n",(0,s.jsx)(r.Z,{sandbox:"darkmode-0ubir",title:"Dark mode toggle in Next.js"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["I really wanted to share my solution for this, as I found it particularly difficult to make it run, especially with the ",(0,s.jsx)(n.code,{children:"localStorage"}),". I hope it will make your coding easier."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Enjoy coding with Next.js!"})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(l,Object.assign({},e,{children:(0,s.jsx)(h,e)}))}}},function(e){e.O(0,[838,151,365,594,805,136,911,774,888,179],(function(){return n=842,e(e.s=n);var n}));var n=e.O();_N_E=n}]);