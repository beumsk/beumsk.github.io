(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[304],{6217:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/nextjs-dark-mode",function(){return n(4748)}])},3753:function(e,t,n){"use strict";n.d(t,{Z:function(){return f}});var s=n(5893),a=n(7294),i=n(1163),r=n(1664),c=n(5697),o=n.n(c),l=n(4725),h=n.n(l),d=(n(9578),n(2427),n(8193)),m=n(3422),u=n(9095),g=n(4285);function f(e){var t=e.children,n=(0,i.useRouter)();(0,a.useEffect)((function(){h().highlightAll()}),[n]);var c=m.x.filter((function(e){return e.slug===n.asPath.replace("/blog/","")}))[0],o=c.title,l=c.intro,f=c.img,x=c.date,p=c.categories,j=c.url,w=""===x?"No date":"".concat(new Date(x).getDate(),".").concat(new Date(x).getMonth()+1,".").concat(new Date(x).getFullYear()),b=null===p||void 0===p?void 0:p.split(", ").filter((function(e){return e})),k=m.x[m.x.findIndex((function(e){return e.title===o}))+1]||m.x[0],v=[m.x[m.x.findIndex((function(e){return e.title===o}))-1]||m.x[m.x.length-1],k];return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(u.Z,{title:"".concat(o," | Blog | R\xe9my Beumier"),description:l,img:f,url:j,itemtype:"Article",children:(0,s.jsx)("div",{className:"container narrow posts-shape",children:(0,s.jsx)("div",{"data-aos":"fade-left",children:(0,s.jsxs)("article",{children:[(0,s.jsx)("h1",{itemProp:"headline name",children:o}),(0,s.jsx)("img",{src:f,alt:o,width:"300",height:"150",className:"post__img mb-5",itemProp:"image"}),(0,s.jsxs)("div",{className:"space-between-x pb-5",children:[(0,s.jsx)("div",{className:"post__categories",children:null===b||void 0===b?void 0:b.map((function(e){return(0,s.jsx)(r.default,{href:"/blog?".concat(e),children:(0,s.jsx)("a",{children:(0,s.jsx)("span",{itemProp:"articleSection",children:e.charAt(0).toUpperCase()+e.slice(1)})})},e)}))}),(0,s.jsx)("time",{className:"post__date",itemProp:"datePublished",content:w,dateTime:w,children:w})]}),(0,s.jsx)("div",{className:"post__content mt-5 mb-10",itemProp:"articleBody",children:t}),(0,s.jsx)("div",{className:"pt-4 mb-16",children:(0,s.jsx)(r.default,{href:"/blog",children:(0,s.jsxs)("a",{className:"btn",children:[(0,s.jsx)(d.FtK,{className:"mr-1"}),"Back to blog listing"]})})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("p",{className:"related-title",children:"Suggested articles"}),(0,s.jsx)(g.Z,{data:v,className:"mt-6 mb-20"})]})]})})})})})}f.propTypes={meta:o().object,children:o().node,posts:o().array}},4748:function(e,t,n){"use strict";n.r(t);var s=n(5893),a=n(1151),i=n(3753),r=function(e){var t=e.children;return(0,s.jsx)(i.Z,{children:t})};function c(e){var t=Object.assign({p:"p",h2:"h2",pre:"pre",code:"code",strong:"strong",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"When I started listing the features I wanted for my new website, a dark mode toggle was in the top tier list as it's becoming a standard. Even though I'm not a big supporter of dark mode, I know people love it and I was willing to tackle this challenge."}),"\n",(0,s.jsx)(t.h2,{children:"The CSS part"}),"\n",(0,s.jsx)(t.p,{children:"For this feature, we want to use CSS variables. We have a range of variables that will switch according to the color mode.\nHere is a snippet example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-css",children:"main {\n  --text: #000000;\n  --text2: #333333;\n  --bg2: #eeeeee;\n  --bg: #ffffff;\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Here the dark mode style if the ",(0,s.jsx)(t.code,{children:".dark"})," class is applied. We will see the JavaScript later:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-css",children:"main.dark {\n  --text: #ffffff;\n  --text2: #eeeeee;\n  --bg2: #333333;\n  --bg: #000000;\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["To finalise the styling part, we use the ",(0,s.jsx)(t.code,{children:"prefers-color-scheme"})," check to match users settings.\nIt needs to be overridden with the ",(0,s.jsx)(t.code,{children:".light"})," class.\nThis is done this way:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-css",children:"@media (prefers-color-scheme: dark) {\n  main {\n    --text: #ffffff;\n    --text2: #eeeeee;\n    --bg2: #333333;\n    --bg: #000000;\n  }\n  main.light {\n    --text: #000000;\n    --text2: #333333;\n    --bg2: #eeeeee;\n    --bg: #ffffff;\n  }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{children:"The JavaScript and Next.js part"}),"\n",(0,s.jsxs)(t.p,{children:["Let's see how we can make this dark mode toggle with ",(0,s.jsx)(t.code,{children:"useEffect"})," and ",(0,s.jsx)(t.code,{children:"useState"}),".\nFirst, let's create a button that will change the class of our ",(0,s.jsx)(t.code,{children:"main"})," element."]}),"\n",(0,s.jsxs)(t.p,{children:["When we click on the button we toggle the ",(0,s.jsx)(t.code,{children:"theme"})," thanks to React hooks."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { useState } from 'react';\n\nexport default function Main(props) {\n  const [theme, setTheme] = useState('');\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  };\n\n  return (\n    <main className={theme}>\n      <button onClick={switchTheme} theme={theme}>\n        {theme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode'}\n      </button>\n    </main>\n  );\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["We have a functional button toggling between dark and light modes. However, it will not save anything and if we reload the page, we will face a light mode whatever we opted for. That's where we use ",(0,s.jsx)(t.code,{children:"localStorage"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In order to access the window object and therefore the localStorage, we must ensure the page has fully loaded. We do this with the ",(0,s.jsx)(t.code,{children:"useEffect(() => {...}, [])"}),".\nWe can then check localStorage and if there is an entry for ",(0,s.jsx)(t.code,{children:"theme"})," we apply it."]}),"\n",(0,s.jsxs)(t.p,{children:["We also update the ",(0,s.jsx)(t.code,{children:"switchTheme"})," to save our theme preference in localStorage."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { useEffect, useState } from 'react';\n\nexport default function Main(props) {\n  const [theme, setTheme] = useState('');\n\n  useEffect(() => {\n    let localTheme = window.localStorage.getItem('theme');\n    setTheme(localTheme);\n  }, []);\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    window.localStorage.setItem('theme', newTheme);\n    setTheme(newTheme);\n  };\n\n  return (\n    <main className={theme}>\n      <button onClick={switchTheme} theme={theme}>\n        {theme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode'}\n      </button>\n    </main>\n  );\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"We have a functional dark mode toggle in your Next.js app by now. In case of struggle, check the steps again or click the full solution link below."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"TLDR"}),": ",(0,s.jsx)("a",{href:"https://codesandbox.io/s/darkmode-0ubir",target:"_blank",children:"Codesandbox: Dark mode toggle in Next.js"}),"."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["I really wanted to share my solution for this, as I found it particularly difficult to make it run, especially with the ",(0,s.jsx)(t.code,{children:"localStorage"}),". I hope it will make your coding easier."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Enjoy coding with Next.js!"})]})}t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(c,e)}))}}},function(e){e.O(0,[228,415,445,617,417,434,127,774,888,179],(function(){return t=6217,e(e.s=t);var t}));var t=e.O();_N_E=t}]);