{"pageProps":{"posts":[{"slug":"css-only-responsive-navbar","title":"CSS only responsive Navbar","intro":"How to build a CSS responsive navigation bar menu without JavaScript","img":"/images/posts/css-only-responsive-navbar.jpg","date":"10/31/2022","categories":"css, tutorial","link":"/blog/css-only-responsive-navbar"},{"slug":"change-nextjs-error-pages","title":"Change Next.js error pages","intro":"How to change the default Next.js error pages and make it your own","img":"/images/posts/change-nextjs-error-pages.jpg","date":"08/17/2022","categories":"next.js, tutorial","link":"/blog/change-nextjs-error-pages"},{"slug":"get-web-analytics-in-nextjs-with-goatcounter","title":"Get web analytics in Next.js with Goatcounter","intro":"How to track your Next.js web analytics without tracking of personal data with Goatcounter","img":"/images/posts/get-web-analytics-in-nextjs-with-goatcounter.jpg","date":"04/07/2022","categories":"next.js, tutorial, analytics","link":"/blog/get-web-analytics-in-nextjs-with-goatcounter"},{"slug":"generate-a-sitemap-in-nextjs","title":"Generate a sitemap in Next.js","intro":"How to generate an automatic and custom sitemap in your Next.js build?","img":"/images/posts/generate-a-sitemap-in-nextjs.jpg","date":"02/25/2022","categories":"next.js, tutorial","link":"/blog/generate-a-sitemap-in-nextjs"},{"slug":"set-up-eslint-into-nextjs","title":"Set up ESLint into Next.js","intro":"How to set up the ESLint linter into a Next.js project","img":"/images/posts/set-up-eslint-into-nextjs.jpg","date":"02/11/2022","categories":"next.js, tutorial","link":"/blog/set-up-eslint-into-nextjs"},{"slug":"fix-the-window-is-not-defined-error","title":"Fix the Window is not defined error","intro":"How to fix the error Window is not defined in Next.js","img":"/images/posts/fix-the-window-is-not-defined-error.jpg","date":"01/22/2022","categories":"next.js, tutorial","link":"/blog/fix-the-window-is-not-defined-error"},{"slug":"nextjs-dark-mode","title":"Next.js dark mode","intro":"How to add a dark mode to your Next.js site","img":"/images/posts/nextjs-dark-mode.jpg","date":"01/15/2022","categories":"next.js, tutorial","link":"/blog/nextjs-dark-mode"},{"slug":"markdown-tutorial","title":"Markdown Tutorial","intro":"Introduction tutorial to the Markdown language","img":"/images/posts/markdown-tutorial.jpg","date":"12/28/2021","categories":"tutorial","link":"/blog/markdown-tutorial"},{"slug":"set-nextjs-lang","title":"Set Next.js lang","intro":"Specify HTML lang attribute in a Next.js site","img":"/images/posts/set-nextjs-lang.jpg","date":"12/27/2021","categories":"next.js, tutorial","link":"/blog/set-nextjs-lang"}],"content":"<p>Linters are so useful that when we end up in a project without one, we are totally frustrated. \nIt happened to me with this very project and we will see how to set up a linter and leverage huge time benefits.</p>\n<h2 id=\"basic-nextjs-linter\">Basic Next.js linter</h2>\n<p>The default Next.js linter isn&#39;t installed automatically, and we get noticed every time we build our application.\nFollowing Next.js advice, we run <code>yarn lint</code> in the terminal to face another error. We must first install it.\n<em>I had issues installing the linter with <code>npm</code>, so I will use yarn in this article, as advised by the Next team.</em></p>\n<ol>\n<li>Install ESLint <code>yarn add --dev eslint</code></li>\n<li>Run lint <code>yarn lint</code></li>\n<li>Follow the instructions to install <code>strict</code> or <code>base</code> Next.js linter</li>\n<li>Run <code>yarn lint</code> again and this time it will scan the entire app and give back the potential linter errors</li>\n<li>If there are errors, <code>yarn lint --fix</code> will fix everything automatically, but there is also a log of every error and their location to solve manually</li>\n</ol>\n<h2 id=\"extend-the-linter-rules\">Extend the linter rules</h2>\n<p>Would we have more rules to our linter, there is a way to extend what Next.js set as linting.</p>\n<ol>\n<li>We should have a <code>.eslintrc.json</code> file to open\nStrict:<pre><code class=\"language-js\">{\n&quot;extends&quot;: &quot;next/core-web-vitals&quot;\n}</code></pre>\nBasic: <pre><code class=\"language-js\">{\n&quot;extends&quot;: &quot;next&quot;\n}</code></pre>\n</li>\n<li>We make the <code>extends</code> an array of strings and add anything, for example <code>eslint-config-airbnb</code><pre><code class=\"language-js\">{\n&quot;extends&quot;: [&quot;next/core-web-vitals&quot;, &quot;eslint-config-airbnb&quot;]\n}</code></pre>\n</li>\n<li>Install it with the command <code>yarn add --dev eslint-config-airbnb</code></li>\n<li>If we want to change any linter rule, here is the way<pre><code class=\"language-js\">{\n&quot;extends&quot;: [&quot;next/core-web-vitals&quot;, &quot;eslint-config-airbnb&quot;],\n&quot;rules&quot;: {\n &quot;react/no-unescaped-entities&quot;: &quot;off&quot;,\n &quot;@next/next/no-img-element&quot;: &quot;off&quot;\n}\n}</code></pre>\n</li>\n<li>We can check this <a href=\"https://nextjs.org/docs/basic-features/eslint\">official link for more info on linters</a></li>\n</ol>\n<h2 id=\"format-on-save-with-prettier\">Format on save with Prettier</h2>\n<p>Another point I find close to linters are the formatters. They help us to have consistent syntax and spaces across all our files.\nLet&#39;s see how their magic can happen on every save.</p>\n<ol>\n<li>Install Prettier <code>yarn add --dev prettier eslint-config-prettier</code></li>\n<li>If there isn&#39;t one already, we create a <code>.prettierrc.json</code> file</li>\n<li>Here are my usual settings:<pre><code class=\"language-js\">{\n&quot;semi&quot;: true,\n&quot;trailingComma&quot;: &quot;es5&quot;,\n&quot;singleQuote&quot;: true,\n&quot;tabWidth&quot;: 2,\n&quot;useTabs&quot;: false\n}</code></pre>\n</li>\n<li>Check out all <a href=\"https://prettier.io/docs/en/options.html\">settings available</a></li>\n<li>There is also a <code>.prettierignore</code> file to avoid formatting some files</li>\n<li>Let&#39;s go to the editor settings and update &#39;default formatter&#39; to Prettier</li>\n<li>Let&#39;s save any file to see the magic happen</li>\n</ol>\n<p>We are all set to code efficiently with the help of linters and formatters.</p>\n<p>Enjoy coding with Next.js!</p>\n","title":"Set up ESLint into Next.js","description":"How to set up the ESLint linter into a Next.js project","img":"/images/posts/set-up-eslint-into-nextjs.jpg","url":"https://remybeumier.be/blog/set-up-eslint-into-nextjs","date":"02/11/2022","categories":"next.js, tutorial"},"__N_SSG":true}